/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // The distribution plugin to distribute our lib with dependencies
    id 'java-library-distribution'
}

// Druid 0.23.0 uses Java 11
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

distributions {
    main {
        distributionBaseName = 'druid-opa-authorizer'
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    // "hyperic:sigar, a transitive dependency of druid, cannot be found in maven central
    maven {
        url "https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads/"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // The dependency to import the Authorizer interface
    compileOnly 'org.apache.druid:druid:0.23.0'

    compileOnly 'org.apache.druid:druid-core:0.23.0'

    compileOnly 'org.apache.druid:druid-server:0.23.0'

    // For JSON serialize/deserialize in OPA communication
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
